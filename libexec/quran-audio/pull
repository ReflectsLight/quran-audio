#!/usr/bin/env ruby
lib_dir = File.realpath File.join(__dir__, "..", "..", "lib", "quran-audio")
require "optparse"
require File.join(lib_dir, "pull")

##
# CLI options
options = Ryo(author: "alafasy", bitrate: "128", surah: (1..114).to_a)
begin
  op = nil
  OptionParser.new do |o|
    op = o
    o.banner = "Usage: quran-audio pull [OPTIONS]"
    o.on("-aNAME", "--author NAME", "An author's name (default: alafasy)")
    o.on("-bBITRATE", "--bitrate BITRATE", "An MP3 bitrate (default: 128)")
    o.on("-sSURAH", "--surah SURAH", "A comma-separated list of surahs (default: all surahs)", Array)
    o.on("-h", "--help", "Show help") do
      puts op.help
      exit(0)
    end
  end.parse(ARGV, into: options)
rescue
  puts op.help
  exit(1)
end

##
# main
cmd = Pull.new(options)
author = cmd.authors[options.author]
skipped = false
options.surah.each do |surah_no|
  1.upto(cmd.surah_size[surah_no]) do |ayah_no|
    if cmd.exist?(author, surah_no, ayah_no)
      skipped = true
      next
    end
    cmd.pull(author, surah_no.to_s, ayah_no.to_s)
    percent = sprintf("%.2f", (ayah_no / cmd.surah_size[surah_no].to_f) * 100)
    cmd.line.rewind.print "Surah #{surah_no} [#{percent}%]"
    skipped = false
  end
  cmd.line.end unless skipped
end
